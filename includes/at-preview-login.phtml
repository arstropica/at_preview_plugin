<?php
    /**
    * DS Responsive Framework ds-preview-login.phtml
    * 
    * PHP version 5
    * 
    * @category   Theme WordPress Plugin Include 
    * @package    WordPress
    * @author     DigitalSherpa <support@digitalsherpa.com> 
    * @copyright  2014 DigitalSherpa 
    * @license    http://opensource.org/licenses/gpl-license.php GNU Public License 
    * @version    1.0 
    * @link       http://pear.php.net/package/DS Reponsive Framework
    * @subpackage DS Responsive Framework
    * @see        References to other sections (if any)...
    */
?>
<?php
    /*
    * Display Login Form.
    */
?>
<?php
    if ( empty($wp_error) )
        $wp_error = new WP_Error();

    $redirect_to = isset($_GET['redirect']) ? rawurldecode($_GET['redirect']) : admin_url();
    /**
    * Fires when the login form is initialized.
    *
    * @since 3.2.0
    */
    do_action( 'login_init' );
?>
<!DOCTYPE html>
<!--[if IE 8]>
<html xmlns="http://www.w3.org/1999/xhtml" class="ie8" <?php language_attributes(); ?>>
<![endif]-->
<!--[if !(IE 8) ]><!-->
<html xmlns="http://www.w3.org/1999/xhtml" <?php language_attributes(); ?>>
    <!--<![endif]-->
    <head>
        <meta http-equiv="Content-Type" content="<?php bloginfo('html_type'); ?>; charset=<?php bloginfo('charset'); ?>" />
        <title><?php bloginfo('name'); ?> &rsaquo; <?php echo $title; ?></title>
        <?php

            wp_admin_css( 'login', true );

            /**
            * Enqueue scripts and styles for the login page.
            *
            * @since 3.1.0
            */
            do_action( 'login_enqueue_scripts' );
            /**
            * Fires in the login page header after scripts are enqueued.
            *
            * @since 2.1.0
            */
            do_action( 'login_head' );

            if ( is_multisite() ) {
                $login_header_url   = network_home_url();
                $login_header_title = get_current_site()->site_name;
            } else {
                $login_header_url   = __( 'https://wordpress.org/' );
                $login_header_title = __( 'Powered by WordPress' );
            }

            /**
            * Filter link URL of the header logo above login form.
            *
            * @since 2.1.0
            *
            * @param string $login_header_url Login header logo URL.
            */
            $login_header_url = apply_filters( 'login_headerurl', $login_header_url );
            /**
            * Filter the title attribute of the header logo above login form.
            *
            * @since 2.1.0
            *
            * @param string $login_header_title Login header logo title attribute.
            */
            $login_header_title = apply_filters( 'login_headertitle', $login_header_title );

            $classes = array( 'login-action-' . $action, 'wp-core-ui' );
            if ( wp_is_mobile() )
                $classes[] = 'mobile';
            if ( is_rtl() )
                $classes[] = 'rtl';
            if ( $interim_login ) {
                $classes[] = 'interim-login';
            ?>
            <style type="text/css">html{background-color: transparent;}</style>
            <?php

                if ( 'success' ===  $interim_login )
                    $classes[] = 'interim-login-success';
            }
            $classes[] =' locale-' . sanitize_html_class( strtolower( str_replace( '_', '-', get_locale() ) ) );

            /**
            * Filter the login page body classes.
            *
            * @since 3.5.0
            *
            * @param array  $classes An array of body classes.
            * @param string $action  The action that brought the visitor to the login page.
            */
            $classes = apply_filters( 'login_body_class', $classes, $action );

        ?>
        <style type="text/css">
            .login-username{
                display: none;
            }
        </style>
    </head>
    <body class="login <?php echo esc_attr( implode( ' ', $classes ) ); ?>">
        <div id="login">
            <h1><a href="<?php echo esc_url( $login_header_url ); ?>" title="<?php echo esc_attr( $login_header_title ); ?>"><?php bloginfo( 'name' ); ?></a></h1>
            <?php

                unset( $login_header_url, $login_header_title );

                /**
                * Filter the message to display above the login form.
                *
                * @since 2.1.0
                *
                * @param string $message Login message text.
                */
                $message = apply_filters( 'login_message', $message );
                if ( !empty( $message ) )
                    echo $message . "\n";

                // In case a plugin uses $error rather than the $wp_errors object
                if ( !empty( $error ) ) {
                    $wp_error->add('error', $error);
                    unset($error);
                }

                if ( $wp_error->get_error_code() ) {
                    $errors = '';
                    $messages = '';
                    foreach ( $wp_error->get_error_codes() as $code ) {
                        $severity = $wp_error->get_error_data($code);
                        foreach ( $wp_error->get_error_messages($code) as $error ) {
                            if ( 'message' == $severity )
                                $messages .= '    ' . $error . "<br />\n";
                            else
                                $errors .= '    ' . $error . "<br />\n";
                        }
                    }
                    if ( ! empty( $errors ) ) {
                        /**
                        * Filter the error messages displayed above the login form.
                        *
                        * @since 2.1.0
                        *
                        * @param string $errors Login error message.
                        */
                        echo '<div id="login_error">' . apply_filters( 'login_errors', $errors ) . "</div>\n";
                    }
                    if ( ! empty( $messages ) ) {
                        /**
                        * Filter instructional messages displayed above the login form.
                        *
                        * @since 2.5.0
                        *
                        * @param string $messages Login messages.
                        */
                        echo '<p class="message">' . apply_filters( 'login_messages', $messages ) . "</p>\n";
                    }
                }
            ?>
            <?php
                // if ( ! is_user_logged_in() ) { // Display WordPress login form:
                $args = array(
                'redirect' => $redirect_to, 
                'form_id' => 'loginform',
                'label_username' => __( 'Username' ),
                'label_password' => __( 'Enter Guest Password' ),
                'label_remember' => __( 'Remember Me' ),
                'id_username'    => 'user_login_guest',
                'label_log_in' => __( 'Log In' ),
                'remember' => true,
                'value_username' => 'guest',
                );
                wp_login_form( $args );
                // }
            ?>
        </div>
        <?php $input_id = 'user_login'; ?>
        <?php if ( !empty($input_id) ) : ?>
            <script type="text/javascript">
                try{document.getElementById('<?php echo $input_id; ?>').focus();}catch(e){}
                if(typeof wpOnload=='function')wpOnload();
            </script>
            <?php endif; ?>

        <?php
            /**
            * Fires in the login page footer.
            *
            * @since 3.1.0
            */
            do_action( 'login_footer' ); ?>
        <div class="clear"></div>
    </body>
    </html>
